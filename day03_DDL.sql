-- DDL : 데이터 정의어(테이블 조작, 제어 관련 쿼리문)
-- CREATE(생성), DROP(삭제), ALTER(수정), TRUNCATE(테이블내용삭제)

DROP TABLE TBL_MEMBER;
DROP TABLE TBL_PRODUCT;
DROP TABLE TBL_STUDENT;

CREATE TABLE TBL_USER(
	USER_NAME VARCHAR2(100),
	USER_AGE NUMBER
);

SELECT * FROM TBL_USER;

-- USER 테이블 수정
-- 테이블명 수정
ALTER TABLE TBL_USER RENAME TO TBL_MY_USER;

SELECT * FROM TBL_MY_USER;

-- 컬럼추가
ALTER TABLE TBL_MY_USER ADD(USER_GENDER CHAR(1));

SELECT * FROM TBL_MY_USER;

-- 컬럼명 수정
ALTER TABLE TBL_MY_USER RENAME COLUMN USER_NAME TO USER_NICKNAME;

SELECT * FROM TBL_MY_USER;

-- 컬럼삭제
ALTER TABLE TBL_MY_USER DROP COLUMN USER_GENDER;

SELECT * FROM TBL_MY_USER;

-- 컬럼 타입 수정
ALTER TABLE TBL_MY_USER MODIFY(USER_NICKNAME VARCHAR2(500));

SELECT * FROM TBL_MY_USER;

-- TRUNCATE 사용하기 위해 테이블에 값 추가
INSERT INTO TBL_MY_USER
VALUES('짱구', 5);

SELECT * FROM TBL_MY_USER;

INSERT INTO TBL_MY_USER
VALUES('철수', 5);

TRUNCATE TABLE TBL_MY_USER; -- DDL

DELETE FROM TBL_MY_USER; -- DML

DROP TABLE TBL_MY_USER;

-- [실습]
-- 자동차 테이블(TBL_CAR) 생성
-- 자동차 번호 CAR_NUMBER
-- 자동차 브랜드 CAR_BRAND
-- 자동차 출시일 CAR_RELEASE_DATE
-- 색상 CAR_COLOR
-- 가격 CAR_PRICE

CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER,
	CAR_BRADN VARCHAR2(1000),
	CAR_RELEAS_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

SELECT * FROM TBL_CAR;

-- 제약조건 추가
ALTER TABLE TBL_CAR ADD CONSTRAINT PK_CAR PRIMARY KEY(CAR_NUMBER);

/*
 * ALTER TABLE TBL_CAR : TBL_CAR 테이블을 수정하겠다
 * ADD : 추가
 * CONSTRARINT : 제약조건
 * PK_CAR : 제약조건의 이름
 * PRIMARY KEY(CAR_NUMBER) : PK라는 제약조건을 (CAR_NUMBER)컬럼에 추가한다
 * 
 * */

-- 제약조건 삭제 : DROP CONSTRAINT 제약조건이름
ALTER TABLE TBL_CAR DROP CONSTRAINT PK_CAR;

-- 테이블 삭제
DROP TABLE TBL_CAR;

-- 제약조건 추가하여 TBL_CAR 테이블 생성
-- 제약조건의 이름을 설정하지 않으면 오라클이 자동으로 만들어준다
CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_BRADN VARCHAR2(1000),
	CAR_RELEAS_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

SELECT * FROM TBL_CAR;

-- [실습] 동물 테이블 생성
-- 고유번호 ANIMAL_NUMBER
-- 종류	 ANIMAL_SPECIES
-- 나이	 ANIMAL_AGE
-- 먹이	 ANIMAL_FEED

-- 1) 테이블 생성 후 수정 명령을 통해 PK 제약조건 추가
CREATE TABLE TBL_ANIMAL(
	ANIMAL_NUMBER NUMBER,
	ANIMAL_SPEICES VARCHAR2(100),
	ANIMAL_AGE NUMBER,
	ANIMAL_FEED VARCHAR2(100)
);

ALTER TABLE TBL_ANIMAL ADD CONSTRAINT PK_ANIMAL PRIMARY KEY (ANIMAL_NUMBER);

SELECT * FROM TBL_ANIMAL;

-- 2) PK 제약조건 삭제
ALTER TABLE TBL_ANIMAL DROP CONSTRAINT PK_ANIMAL;

SELECT * FROM TBL_ANIMAL;

-- 3) 컬럼 추가 성별, 1글자(ANIMAL_GENDER)
ALTER TABLE TBL_ANIMAL ADD(ANIMAL_GENDER VARCHAR2(1));

SELECT * FROM TBL_ANIMAL;

-- 4) 컬럼이름 수정 고유번호 (ANIMAL_NUM으로 수정)
ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_NUMBER TO ANIMAL_NUM;

SELECT * FROM TBL_ANIMAL;

-- 5) 컬럼 삭제 먹이
ALTER TABLE TBL_ANIMAL DROP COLUMN ANIMAL_FEED;

SELECT * FROM TBL_ANIMAL;

-- 6) 컬럼 수정 종류를 다른 자료형으로(자료형 상관없음)
ALTER TABLE TBL_ANIMAL MODIFY (ANIMAL_AGE VARCHAR2(100));

SELECT * FROM TBL_ANIMAL;

-- 테이블 삭제 후 제약조건 추가하여 생성
DROP TABLE TBL_ANIMAL;

CREATE TABLE TBL_ANIMAL(
	ANIMAL_NUMBER NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	ANIMAL_SPEICES VARCHAR2(100),
	ANIMAL_AGE NUMBER,
	ANIMAL_FEED VARCHAR2(100)
);

SELECT * FROM TBL_ANIMAL;

DROP TABLE TBL_ANIMAL;

-- [실습]
-- 상품(PRODUCT) 테이블 생성
-- 제약조건 PK 설정
-- 상품번호(NUMBER)
-- 이름(NAME)
-- 가격(PRICE)

CREATE TABLE TBL_PRODUCT (
	PRODUCT_NUMBER NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(1000),
	PRODUCT_PRICE NUMBER
);

SELECT * FROM TBL_PRODUCT;


-- PRIMARY KEY : NULL 값 허용 x, 중복값 x

INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
VALUES(1, '초코파이', 1500);

INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
VALUES(2, '새우깡', 1500);

INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
VALUES(3, '핫식스', 1500);

SELECT * FROM TBL_PRODUCT;

-- 오류발생 : PRIMARY KEY의 컬럶에 중복된 값을 넣어서 오류
--INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
--VALUES(1, '컵라면', 1200);

-- 오류발생 : 데이터 타입의 제약조건(타입이 다름)을 위반해서 오류
--INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
--VALUES('1', '허니버터칩', 1400);

-- 오류발생 : PK는 NULL을 허용하지 않는데 NULL을 삽입하려고 해서 오류
--INSERT INTO TBL_PRODUCT(PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PRICE)
--VALUES(NULL, '포카칩', 1600);

SELECT * FROM TBL_PRODUCT;

-- 주문 테이블 생성
CREATE TABLE TBL_ORDER(
	ORDER_NUMBER NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_DATE DATE,
	PRODUCT_NUMBER NUMBER,
	CONSTRAINT FK_ORDER FOREIGN KEY (PRODUCT_NUMBER) REFERENCES TBL_PRODUCT(PRODUCT_NUMBER)
);

SELECT * FROM TBL_ORDER;

-- 학교 테이블, 학생 테이블 PK, FK 설정
CREATE TABLE TBL_SCHOOL(
	SCHOOL_NUMBER NUMBER,
	SCHOOL_NAME VARCHAR2(1000),
	CONSTRAINT PK_SCHOOL PRIMARY KEY(SCHOOL_NUMBER)
);

SELECT * FROM TBL_SCHOOL;

CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER,
	STUDENT_NAME VARCHAR2(1000),
	STUDENT_AGE NUMBER,
	SCHOOL_NUMBER NUMBER,
	CONSTRAINT PK_STUDENT PRIMARY KEY(STUDENT_NUMBER),
	CONSTRAINT FK_STUDENT FOREIGN KEY(SCHOOL_NUMBER) REFERENCES TBL_SCHOOL(SCHOOL_NUMBER)
);

SELECT * FROM TBL_STUDENT;

/*
 * CONSTRAINT FK_STUDENT FOREIGN KEY(SCHOOL_NUMBER) REFERENCES TBL_SCHOOL(SCHOOL_NUMBER)
 * 
 * CONSTRAINT FK_STUDENT FOREIGN KEY(SCHOOL_NUMBER)
 * 			  제약조건이름		제약조건FK(컬럼명)
 * REFERENCES TBL_SCHOOL(SCHOOL_NUMBER)
 *  참조하는		테이블명	(참조하는 테이블의 칼럼명)
 * 
 * 제약조건을 FK_STUDENT 라는 이름으로 걸어줄거야
 * 참조하는 값이 존재하는 곳은 TBL_SCHOOL테이블의 SCHOO_NUMBER 컬럼이다
 * 
 * 참조 : 두 개를 비교하고 대조해본다라는 의미이다
 * 
 * -- TBL_STUDENT의 SCHOOL_NUMBER에 값을 넣ㅇ을 때에는 우리가 저장하려는 값이
 * -- TBL_SCHOOL 테이블의 SHCOOL_NUMBER 컬럶에 존재하는 값인지 비교해보고 존재하는 값만 들어올 수 있다
 * */

-- 학교테이블에 학교 정보 추가
INSERT INTO TBL_SCHOOL VALUES (1,'한국고등학교');
INSERT INTO TBL_SCHOOL VALUES (2,'서울고등학교');
INSERT INTO TBL_SCHOOL VALUES (3,'강남고등학교');

SELECT * FROM TBL_SCHOOL;

-- 학생테이블에 학생 정보 추가
SELECT * FROM TBL_STUDENT;

INSERT INTO TBL_STUDENT VALUES(1, '짱구', 18, 1);

INSERT INTO TBL_STUDENT VALUES(2, '철수', 19, 1);

INSERT INTO TBL_STUDENT VALUES(3, '유리', 17, 2);

INSERT INTO TBL_STUDENT VALUES(4, '훈이', 18, 3);

INSERT INTO TBL_STUDENT VALUES(1, '짱아', 16, 2); -- STUDENT 테이블의 PK값이 중복값이므로 오류 발생

INSERT INTO TBL_STUDENT VALUES(5, '짱아', 16, 5);
-- SCHOOL_NUMBER는 FK로 설정되어있어 SCHOOL 테이블에 존재하는 값만 넣을수 있으므로 없는 값을 넣으면 오류발생
-- SCHOOL 테이블의 컬럼에 존재하지 않는 값을 넣으면 오류발생

-- 제약조건이 있는 테이블 삭제
-- 방법1) FK를 가진 테이블을 먼저 삭제한 후 부모테이블을 삭제한다
DROP TABLE TBL_STUDENT;
DROP TABLE TBL_SCHOOL;

-- 방법2) 제약조건을 같이 삭제하면서 부모테이블을 삭제하는 방법
DROP TABLE TBL_SCHOOL CASCADE CONSTRAINT;
DROP TABLE TBL_STUDENT;

DROP TABLE TBL_PRODUCT CASCADE CONSTRAINT;
DROP TABLE TBL_ORDER;
DROP TABLE TBL_CAR;

-- UNIQUE KEY
-- 학생테이블
-- 학생번호, 학생아이디, 학생이름, 전공, 성별

CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER,
	STUDENT_ID VARCHAR2(1000),
	STUDENT_NAME VARCHAR2(1000),
	STUDENT_MAJOR VARCHAR2(1000),
	STUDENT_GENDER CHAR(1),
	CONSTRAINT PK_STUDENT PRIMARY KEY (STUDENT_NUMBER),
	CONSTRAINT UK_STUDENT UNIQUE (STUDENT_ID)
);

SELECT * FROM TBL_STUDENT;
DROP TABLE TBL_STUDENT;

-- CHECK

CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER,
	STUDENT_ID VARCHAR2(1000),
	STUDENT_NAME VARCHAR2(1000),
	STUDENT_MAJOR VARCHAR2(1000),
	STUDENT_GENDER CHAR(1) DEFAULT 'M' NOT NULL CONSTRAINT GEN_CHAR CHECK(STUDENT_GENDER = 'M' OR STUDENT_GENDER = 'W'),
	CONSTRAINT PK_STUDENT PRIMARY KEY (STUDENT_NUMBER),
	CONSTRAINT UK_STUDENT UNIQUE (STUDENT_ID)
);

/*
 * STUDENT_GENDER CHAR(1) DEFAULT 'M' NOT NULL CHECK(STUDENT_GENDER = 'M' OR STUDENT_GENDER = 'W')
 * DEFAULT 'M'은 데이터가 들어오지 않으면 무조건 'M'이 기본값으로 설정된다
 * 디폴트값을 M으로 설정했으니 NULL값을 강제로 넣는 것을 막도록 NOT NULL을 설정한다
 * STUDENT_GENDER 컬럼에 M 또는 W 값만 넣을 수 있도록 제약조건을 설정한다
 * 저장되려는 값이 M 또는 W인지 검사한다(체크)
 * */
DROP TABLE TBL_STUDENT;
SELECT * FROM TBL_STUDENT;

INSERT INTO TBL_STUDENT
VALUES (1, '240703DC', '김민채', '컴퓨터공학과', 'M');

INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_ID, STUDENT_NAME, STUDENT_MAJOR)
VALUES(2, '240703DB', '짱구', '컴퓨터공학과');

INSERT INTO TBL_STUDENT
VALUES(3, '240703DB', '철수', '정보보안학과', 'M');

-- 조합키(복합키)
-- 2개 이상의 컬럼을 결합하여 유일 한 식별자는 만드는 키(PK가 될 수 있다)

-- 상품테이블
CREATE TABLE TBL_PRODUCT(
   PRODUCT_NUMBER NUMBER,
   PRODUCT_NAME VARCHAR2(1000),
   PRODUCT_COLOR VARCHAR2(1000),
   PRODUCT_PRICE NUMBER,
   CONSTRAINT PK_PRODUCT PRIMARY KEY(PRODUCT_NUMBER, PRODUCT_COLOR)
);

SELECT * FROM TBL_PRODUCT;

DROP TABLE TBL_PRODUCT;

INSERT INTO TBL_PRODUCT
VALUES(1, '신라면', 'RED', 1000);

INSERT INTO TBL_PRODUCT
VALUES(1, '신라면', 'BLACK', 1000);

INSERT INTO TBL_PRODUCT
VALUES(2, '신라면', 'BLACK', 2000);

INSERT INTO TBL_PRODUCT
VALUES(2, '신라면', 'RED', 2000);

SELECT * FROM TBL_PRODUCT;



